steps:
- name: 'gcr.io/cloud-builders/docker'
  id: 'Building backend container image'
  args: [
    'build',
    '.',
    '-t',
    'europe-west1-docker.pkg.dev/temusrag/temus-case-study-registry/backend',
    '-f',
    'backend.dockerfile'
  ]
- name: 'gcr.io/cloud-builders/docker'
  id: 'Pushing backend container image'
  args: [
    'push',
    'europe-west1-docker.pkg.dev/temusrag/temus-case-study-registry/backend'
  ]
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'Deploying backend to Compute Engine'
  waitFor: ["Pushing backend container image"]
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      gcloud compute instances create-with-container backend-instance \
        --project=temusrag \
        --zone=europe-west1-b \
        --machine-type=n1-standard-4 \
        --accelerator type=nvidia-tesla-k80,count=1 \
        --container-image=europe-west1-docker.pkg.dev/temusrag/temus-case-study-registry/backend:latest \
        --boot-disk-size=50GB \
        --maintenance-policy=TERMINATE \
        --restart-on-failure
      gcloud compute instances add-tags backend-instance \
        --tags=http-server,https-server \
        --zone=europe-west1-b

- name: 'gcr.io/cloud-builders/docker'
  id: 'Building frontend container image'
  waitFor: ["Deploying backend to Compute Engine"]
  args: [
    'build',
    '.',
    '-t',
    'europe-west1-docker.pkg.dev/temusrag/temus-case-study-registry/frontend',
    '-f',
    'frontend.dockerfile'
  ]
- name: 'gcr.io/cloud-builders/docker'
  id: 'Pushing frontend container image'
  args: [
    'push',
    'europe-west1-docker.pkg.dev/temusrag/temus-case-study-registry/frontend'
  ]
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'Deploying frontend to Cloud Run'
  waitFor: ["Pushing frontend container image"]
  args: [
    'run',
    'deploy',
    'frontend',
    '--image',
    'europe-west1-docker.pkg.dev/temusrag/temus-case-study-registry/frontend:latest',
    '--region',
    'europe-west1',
    '--platform',
    'managed',
    '--allow-unauthenticated'
  ]
options:
  logging: CLOUD_LOGGING_ONLY
